int d[10];

int foo(int a, int b)
{
    printf("a:", a);
    printf(" b:", b);
    printf("\n");
    if(a > b)
        printf("big\n");
    if(a < b)
        printf("less\n");
    if(a >= b)
        printf("big or equal\n");
    if(a <= b)
        printf("less or equal\n");
    if(a != b)
        printf("not equal\n");
    if(a == b)
        printf("equal\n");
    return (233);
}

void foo4()
{
    int a, b;
    printf("a:");
    scanf(a);
    printf("b:");
    scanf(b);
    printf("a - b = ", a - b);
    printf("\n");
    printf("a + b = ", a + b);
    printf("\n");
    printf("a * b = ", a * b);
    printf("\n");
    printf("a / b = ", a / b);
    printf("\n");
}

char test_char() {
  char a;
  char b;
  a = 'a';
  b = 'b';
  return (a + b);
}

int test_int() {
  int a[2];
  a[0] = 1;
  a[1] = 2;
  a[2] = a[0] * (a[1] + 666);
  return (a[2]);
}

char test_char_array() {
    char a[2];
    a[0] = 'a';
    a[1] = 'b';
    a[2] = a[0] + a[1];
    return (a[2]);
}

int test_int_array() {
    int a[2];
    a[0] = 1;
    a[1] = 2;
    a[2] = a[0] * a[1];
    return (a[2]);
}

int foo2(int j, int k) {
    int a, b, c;
    int d[10];
    a = 123;
    b = 456;
    c = 789;
    d[9] = 233;
    a = d[9] * (k - j) + a / (b - c) * c * a;
    return (a);
}

void test_loop() {
    int i, j, k;
    int num;
    for(i = 0; i < 10; i = i + 1) {
        for(j = 0; j < 10; j = j + 1) {
            for(k = 0; k < 10; k = k + 1) {
                num = i * 100 + j * 10 + k;
                printf(num);
                printf("\n");
            }
        }
    }

    for(i = 0; i < 10; i = i + 1)
            for(j = 0; j < 10; j = j + 1)
                for(k = 0; k < 10; k = k + 1)
                    printf(i * 100 + j * 10 + k);

    do {
        i = i - 1;
        j = 10;
        k = 10;
        do {
            j = j - 1;
            k = 10;
            do {
                k = k - 1;
                num = i * 100 + j * 10 + k;
                printf(num);
                printf("\n");
            } while(k > 0)
        } while(j > 0)
    } while(i > 0)

    do
        do
            do
                printf("do...while\n");
            while(k != 0)
        while(j != 0)
    while(i != 0)
}


void quick_sort(int i, int j) {
    int x, y, z;
    int tmp;
    x = i;
    y = j;
    z = d[(i + j) / 2];
    do {
        for(y = y; z < d[y]; y = y - 1);
        for(x = x; z > d[x]; x = x + 1);
        if(x <= y) {
            tmp = d[x];
            d[x] = d[y];
            d[y] = tmp;
            x = x + 1;
            y = y - 1;
        }
    } while(x < y)

    if(x < j) quick_sort(x, j);
    if(i < y) quick_sort(i, y);
}

int fibonacci (int n){
    if (n == 0) return (1);
    if(n==1) return (1);
    if (n == 2) return (2);
    if(n!=2) return (fibonacci(n-1)+fibonacci(n-2));
}

int foo5(int i)
{
    printf(i);
    printf("\n");
    if(i == 10) {
        return (i);
    }
    return (foo5(i + 1));
}

void main() {
    int a;
    int i;
    scanf(a);
    if(a == 1) {
        foo(2, 3);
        foo4();
    }
    if(a == 2) {
        printf("test_char: ", test_char());
        printf("\n");
        printf("test_int: ", test_int());
        printf("\n");
        printf("test_char_array: ", test_char_array());
        printf("\n");
        printf("test_int_array: ", test_int_array());
        printf("\n");
        printf("foo2: ", foo2(2, 3));
    }
    if(a == 3) {
        test_loop();
    }
    if(a == 4) {
        for(i = 0; i < 10; i = i + 1) {
            d[i] = 10 - i;
        }
        quick_sort(0, 10);
        for(i = 0; i < 10; i = i + 1) {
            printf(d[i]);
        }
    }
    if(a == 5) {
        printf("fibonacci: ", fibonacci(10));
        printf("\n");
        foo5(0);
    }
}

